name: Build and Deploy Web shonen-dev to Development

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [development]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Development"
        required: true
#2
env:
  REGISTRY: "registry.digitalocean.com/research-dev-registry"
  IMAGE_NAME: "docker_shonen_dev"
  CONTAINER_NAME: "docker_shonen_dev_ctr"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: pawitrawarda/docker_shonen_dev

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: pawitrawarda/docker_shonen_dev:latest
          labels: latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_KAZUHA }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY_KAZUHA }}
          port: ${{ secrets.PORT }}
          passphrase: ${{ secrets.PASSPHRASE_KAZUHA }}
          envs: IMAGE_NAME,REGISTRY,CONTAINER_NAME,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Pull registry
            docker pull pawitrawarda/$(echo $IMAGE_NAME):latest
            # Stop running container
            docker stop $(echo $CONTAINER_NAME)
            # Remove old container
            docker rm $(echo $CONTAINER_NAME)
            # Run a new container from a new image
            docker run -d -p 8093:3000 --name $(echo $CONTAINER_NAME) pawitrawarda/$(echo $IMAGE_NAME):latest
